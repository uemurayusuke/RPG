
package bases;

// 人間を表現する抽象クラス
public abstract class Human extends Living {

	// コンストラクタ
	public Human(String name, String weapon) {
		// Livingクラスで定義したコンストラクタを利用する
	}

	// attackメソッドのオーバーライド
	@Override
	public void attack(Living target) {
		// 1から10までのサイコロを振り、自分の攻撃力とかけ合わせた値を相手に与えるダメージとする

		// 相手のHPをダメージ値だけ減らす

		// 自分の攻撃力を1だけ減らす

		// コンソールにステータスを表示

	}
}


//オブジェクト指向
//プログラムの要素を「オブジェクト(モノ)」として扱う考え方。
//オブジェクト指向は考え方です。
//例えば、「犬」というオブジェクトを作り、それに特徴や機能・動作を持たせて扱う。
//
//まとめ
//オブジェクト指向は考え方。
//オブジェクトを作って、そこに特徴や動作を持たせて扱うという事。

//乱数
//0から9までの数字が不規則で配列されたもの。
//まとめ
//乱数は、不規則に並んだ数字の事。

//クラス
//オブジェクトの設計図の事やな

//課題
//設計図を9個作って、オブジェクトを9個使いましょうって話やな。

//具象クラス
//実際に動作するプログラムが記述されたクラスの事。

